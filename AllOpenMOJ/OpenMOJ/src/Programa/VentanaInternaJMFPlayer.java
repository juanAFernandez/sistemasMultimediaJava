/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Programa;

import static extras.Imprimir.Imprimir;
import java.awt.Component;
import java.io.File;
import javax.media.Format;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.PlugInManager;
import javax.media.format.AudioFormat;
import static sun.audio.AudioPlayer.player;

/**
 *
 * @author juan
 */
public class VentanaInternaJMFPlayer extends javax.swing.JInternalFrame {

    /**
     * Objeto reproductor.
     * @see <a href="http://docs.oracle.com/javame/config/cdc/opt-pkgs/api/jsr927/javax/media/Player.html">Class Player</a>
     * 
     */
    private Player player = null;
    
    
    
    
    /**
     * Creates new form VentanaInternaJMFPlayer
     */       
    private VentanaInternaJMFPlayer(File f) {
        
        
        
        Format input1 = new AudioFormat(AudioFormat.MPEGLAYER3);
		Format input2 = new AudioFormat(AudioFormat.MPEG);
		Format output = new AudioFormat(AudioFormat.LINEAR);
		PlugInManager.addPlugIn(
			"com.sun.media.codec.audio.mp3.JavaDecoder",
			new Format[]{input1, input2},
			new Format[]{output},
			PlugInManager.CODEC
		);
        
        
        
        Imprimir("Abriendo VentanaInternaJMFPlayer");
        
        initComponents();
        String sfichero = "file:" + f.getAbsolutePath();
        
        Imprimir("Try open: "+sfichero);
        //Le ponemos a la ventana el nombre del fichero
        this.setTitle(f.getName());
        
        System.out.println(sfichero);
        MediaLocator ml = new MediaLocator(sfichero);
        try {
            
   
	Player player = Manager.createPlayer(ml);
	player.start();
		
	
		
	
            
            
            
            /*
            //Creamos el reproductor
            player = Manager.createRealizedPlayer(ml);
            Component vc = player.getVisualComponent();
            if(vc!=null)add(vc, java.awt.BorderLayout.CENTER);
            Component cpc = player.getControlPanelComponent();
            if(cpc!=null)add(cpc, java.awt.BorderLayout.SOUTH);
            this.pack();
            
            player.start();
            
            */
            
        }catch(Exception e) {
            System.err.println("VentanaInternaJMFPlayer: "+e);
            player = null;
        }
        this.resizable=true;
        this.closable=true;
        this.maximizable=true;
        
    }
        public static VentanaInternaJMFPlayer getInstance(File f){
            VentanaInternaJMFPlayer v = new VentanaInternaJMFPlayer(f);
            if(v.player!=null) 
                return v;
            else 
                return null;
        }
        public void play() {
                Imprimir("PRESS BUTTON PLAY");
            if (player != null) {
                try {
                    Imprimir("Try playing");
                    player.start();
                } catch (Exception e) {
                    System.err.println("VentanaInternaJMFPlayer: "+e);
                }
            }
            Imprimir("PLAYER==NULL");
        }
        
        public void close(){
         try{
            if(player!=null) player.close();
        } catch(Exception e) {
            System.err.println("VentanaInternaJMFPlayer: " + e);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
